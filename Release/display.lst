ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"display.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_idiv
  18              		.global	__aeabi_idivmod
  19              		.section	.text.write_score,"ax",%progbits
  20              		.align	2
  21              		.global	write_score
  22              		.code	16
  23              		.thumb_func
  25              	write_score:
  26              	.LFB33:
  27              		.file 1 "../src/display.c"
   1:../src/display.c ****  /*
   2:../src/display.c **** * Copyright 2014, Jacques Deschênes
   3:../src/display.c **** * This file is part of LPC810-pong.
   4:../src/display.c **** *
   5:../src/display.c **** *     LPC810-pong is free software: you can redistribute it and/or modify
   6:../src/display.c **** *     it under the terms of the GNU General Public License as published by
   7:../src/display.c **** *     the Free Software Foundation, either version 3 of the License, or
   8:../src/display.c **** *     (at your option) any later version.
   9:../src/display.c **** *
  10:../src/display.c **** *     VPC-32 is distributed in the hope that it will be useful,
  11:../src/display.c **** *     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../src/display.c **** *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:../src/display.c **** *     GNU General Public License for more details.
  14:../src/display.c **** *
  15:../src/display.c **** *     You should have received a copy of the GNU General Public License
  16:../src/display.c **** *     along with LPC810-pong.  If not, see <http://www.gnu.org/licenses/>.
  17:../src/display.c **** */
  18:../src/display.c **** 
  19:../src/display.c **** 
  20:../src/display.c **** /*
  21:../src/display.c ****  * display.c
  22:../src/display.c ****  *
  23:../src/display.c ****  *  Created on: 2014-06-24
  24:../src/display.c ****  *      Author: Jacques Deschênes
  25:../src/display.c ****  *      Description: interfaces function to tvout display
  26:../src/display.c ****  */
  27:../src/display.c **** 
  28:../src/display.c **** #include "display.h"
  29:../src/display.c **** 
  30:../src/display.c **** // police 3x5 pixels, chiffres 0-9
  31:../src/display.c **** const char  digits[10][5]={
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 2


  32:../src/display.c **** 		{14,10,10,10,14},//0
  33:../src/display.c **** 		{4,12,4,4,14},//1
  34:../src/display.c **** 		{14,2,14,8,14},//2
  35:../src/display.c **** 		{14,2,14,2,14},//3
  36:../src/display.c **** 		{10,10,14,2,2},//4
  37:../src/display.c **** 		{14,8,14,2,14},//5
  38:../src/display.c **** 		{8,8,14,10,14},//6
  39:../src/display.c **** 		{14,2,2,2,2},//7
  40:../src/display.c **** 		{14,10,14,10,14},//8
  41:../src/display.c **** 		{14,10,14,2,2} //9
  42:../src/display.c **** };
  43:../src/display.c **** 
  44:../src/display.c **** 
  45:../src/display.c **** // affiche le pointage
  46:../src/display.c **** void write_score(int player, int score){
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              	.LVL0:
  31 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 3, -24
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 4F46     		mov	r7, r9
  40 0004 174B     		ldr	r3, .L7
  41 0006 4646     		mov	r6, r8
  42 0008 C0B4     		push	{r6, r7}
  43              		.cfi_def_cfa_offset 32
  44              		.cfi_offset 8, -32
  45              		.cfi_offset 9, -28
  46              		.loc 1 46 0
  47 000a 8946     		mov	r9, r1
  47:../src/display.c **** 	unsigned char offset;
  48:../src/display.c **** 	int i,j;
  49:../src/display.c **** 	offset=player*(ROW_SIZE>>1)+1;
  48              		.loc 1 49 0
  49 000c 8700     		lsl	r7, r0, #2
  50:../src/display.c **** 	i=(score/10);
  50              		.loc 1 50 0
  51 000e 081C     		mov	r0, r1
  52              	.LVL1:
  53 0010 0A21     		mov	r1, #10
  54              	.LVL2:
  55 0012 9846     		mov	r8, r3
  56 0014 FFF7FEFF 		bl	__aeabi_idiv
  57              	.LVL3:
  49:../src/display.c **** 	offset=player*(ROW_SIZE>>1)+1;
  58              		.loc 1 49 0
  59 0018 0137     		add	r7, r7, #1
  60 001a 8300     		lsl	r3, r0, #2
  61 001c 1818     		add	r0, r3, r0
  62 001e FFB2     		uxtb	r7, r7
  63 0020 114C     		ldr	r4, .L7+4
  64 0022 4044     		add	r0, r0, r8
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 3


  65              		.loc 1 50 0
  66 0024 3D1C     		mov	r5, r7
  51:../src/display.c **** //	put_char_at(offset,0,i,WHITE);
  52:../src/display.c **** 
  53:../src/display.c **** 	for (j=0;j<5;j++){
  67              		.loc 1 53 0
  68 0026 0023     		mov	r3, #0
  69              	.LVL4:
  70              	.L3:
  54:../src/display.c **** 		video_buffer[j*ROW_SIZE+offset]=digits[i][j]<<4;
  71              		.loc 1 54 0 discriminator 2
  72 0028 C65C     		ldrb	r6, [r0, r3]
  53:../src/display.c **** 	for (j=0;j<5;j++){
  73              		.loc 1 53 0 discriminator 2
  74 002a 0133     		add	r3, r3, #1
  75              	.LVL5:
  76              		.loc 1 54 0 discriminator 2
  77 002c 3601     		lsl	r6, r6, #4
  78 002e F6B2     		uxtb	r6, r6
  79 0030 6655     		strb	r6, [r4, r5]
  80 0032 0835     		add	r5, r5, #8
  53:../src/display.c **** 	for (j=0;j<5;j++){
  81              		.loc 1 53 0 discriminator 2
  82 0034 052B     		cmp	r3, #5
  83 0036 F7D1     		bne	.L3
  84              	.LVL6:
  55:../src/display.c **** 	}
  56:../src/display.c **** 
  57:../src/display.c **** 	i=(score%10);
  85              		.loc 1 57 0
  86 0038 4846     		mov	r0, r9
  87 003a 0A21     		mov	r1, #10
  88 003c FFF7FEFF 		bl	__aeabi_idivmod
  89              	.LVL7:
  90 0040 8B00     		lsl	r3, r1, #2
  91 0042 5918     		add	r1, r3, r1
  92 0044 4144     		add	r1, r1, r8
  93 0046 3A1C     		mov	r2, r7
  58:../src/display.c **** //	put_char_at(offset+4,0,i,WHITE);
  59:../src/display.c **** 
  60:../src/display.c **** 	for (j=0;j<5;j++){
  94              		.loc 1 60 0
  95 0048 0023     		mov	r3, #0
  96              	.LVL8:
  97              	.L5:
  61:../src/display.c **** 		video_buffer[j*ROW_SIZE+offset]|=digits[i][j];
  98              		.loc 1 61 0 discriminator 2
  99 004a A55C     		ldrb	r5, [r4, r2]
 100 004c C85C     		ldrb	r0, [r1, r3]
  60:../src/display.c **** 	for (j=0;j<5;j++){
 101              		.loc 1 60 0 discriminator 2
 102 004e 0133     		add	r3, r3, #1
 103              	.LVL9:
 104              		.loc 1 61 0 discriminator 2
 105 0050 2843     		orr	r0, r5
 106 0052 A054     		strb	r0, [r4, r2]
 107 0054 0832     		add	r2, r2, #8
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 4


  60:../src/display.c **** 	for (j=0;j<5;j++){
 108              		.loc 1 60 0 discriminator 2
 109 0056 052B     		cmp	r3, #5
 110 0058 F7D1     		bne	.L5
  62:../src/display.c **** 	}
  63:../src/display.c **** 
  64:../src/display.c **** }//f()
 111              		.loc 1 64 0
 112              		@ sp needed
 113              	.LVL10:
 114 005a 0CBC     		pop	{r2, r3}
 115 005c 9046     		mov	r8, r2
 116 005e 9946     		mov	r9, r3
 117 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 118              	.L8:
 119 0062 C046     		.align	2
 120              	.L7:
 121 0064 00000000 		.word	.LANCHOR0
 122 0068 00000000 		.word	video_buffer
 123              		.cfi_endproc
 124              	.LFE33:
 126              		.section	.text.plot,"ax",%progbits
 127              		.align	2
 128              		.global	plot
 129              		.code	16
 130              		.thumb_func
 132              	plot:
 133              	.LFB34:
  65:../src/display.c **** 
  66:../src/display.c **** /*
  67:../src/display.c ****  * void plot(int x, int y, int operation
  68:../src/display.c ****  * description: dessine un pixel
  69:../src/display.c ****  * paramètres:
  70:../src/display.c ****  * 		x: coordonnée X
  71:../src/display.c ****  * 		y: coordonnée Y
  72:../src/display.c ****  * 		color: BLACK, WHITE et INVERT
  73:../src/display.c ****  */
  74:../src/display.c **** void plot(int x, int y, int color){
 134              		.loc 1 74 0
 135              		.cfi_startproc
 136              	.LVL11:
  75:../src/display.c **** 	int byte, bit;
  76:../src/display.c **** 	byte = x/8;
 137              		.loc 1 76 0
 138 0000 C317     		asr	r3, r0, #31
 139 0002 5B0F     		lsr	r3, r3, #29
 140 0004 1818     		add	r0, r3, r0
 141              	.LVL12:
  74:../src/display.c **** void plot(int x, int y, int color){
 142              		.loc 1 74 0
 143 0006 30B5     		push	{r4, r5, lr}
 144              		.cfi_def_cfa_offset 12
 145              		.cfi_offset 4, -12
 146              		.cfi_offset 5, -8
 147              		.cfi_offset 14, -4
  77:../src/display.c **** 	bit= 1<<(7-(x%8));
 148              		.loc 1 77 0
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 5


 149 0008 0724     		mov	r4, #7
 150 000a 8443     		bic	r4, r0
 151 000c E318     		add	r3, r4, r3
  76:../src/display.c **** 	byte = x/8;
 152              		.loc 1 76 0
 153 000e C510     		asr	r5, r0, #3
 154              	.LVL13:
 155              		.loc 1 77 0
 156 0010 0120     		mov	r0, #1
 157 0012 9840     		lsl	r0, r0, r3
 158 0014 031C     		mov	r3, r0
 159              	.LVL14:
  78:../src/display.c **** 	switch(color){
 160              		.loc 1 78 0
 161 0016 012A     		cmp	r2, #1
 162 0018 13D0     		beq	.L11
 163 001a 022A     		cmp	r2, #2
 164 001c 09D0     		beq	.L12
 165 001e 002A     		cmp	r2, #0
 166 0020 00D0     		beq	.L14
 167              	.LVL15:
 168              	.L9:
  79:../src/display.c **** 	case BLACK:
  80:../src/display.c **** 		video_buffer[y*ROW_SIZE+byte]&=~bit;
  81:../src/display.c **** 		break;
  82:../src/display.c **** 	case WHITE:
  83:../src/display.c **** 		video_buffer[y*ROW_SIZE+byte]|=bit;
  84:../src/display.c **** 		break;
  85:../src/display.c **** 	case INVERT:
  86:../src/display.c **** 		video_buffer[y*ROW_SIZE+byte]^=bit;
  87:../src/display.c **** 		break;
  88:../src/display.c **** 	}//switch
  89:../src/display.c **** }//f()
 169              		.loc 1 89 0
 170              		@ sp needed
 171              	.LVL16:
 172 0022 30BD     		pop	{r4, r5, pc}
 173              	.LVL17:
 174              	.L14:
  80:../src/display.c **** 		video_buffer[y*ROW_SIZE+byte]&=~bit;
 175              		.loc 1 80 0
 176 0024 C900     		lsl	r1, r1, #3
 177              	.LVL18:
 178 0026 0B4A     		ldr	r2, .L15
 179              	.LVL19:
 180 0028 6D18     		add	r5, r5, r1
 181              	.LVL20:
 182 002a 515D     		ldrb	r1, [r2, r5]
 183 002c 8143     		bic	r1, r0
 184 002e 5155     		strb	r1, [r2, r5]
  81:../src/display.c **** 		break;
 185              		.loc 1 81 0
 186 0030 F7E7     		b	.L9
 187              	.LVL21:
 188              	.L12:
  86:../src/display.c **** 		video_buffer[y*ROW_SIZE+byte]^=bit;
 189              		.loc 1 86 0
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 6


 190 0032 084A     		ldr	r2, .L15
 191              	.LVL22:
 192 0034 C900     		lsl	r1, r1, #3
 193              	.LVL23:
 194 0036 6D18     		add	r5, r5, r1
 195              	.LVL24:
 196 0038 505D     		ldrb	r0, [r2, r5]
 197              	.LVL25:
 198 003a 4340     		eor	r3, r0
 199              	.LVL26:
 200 003c DBB2     		uxtb	r3, r3
 201 003e 5355     		strb	r3, [r2, r5]
  87:../src/display.c **** 		break;
 202              		.loc 1 87 0
 203 0040 EFE7     		b	.L9
 204              	.LVL27:
 205              	.L11:
  83:../src/display.c **** 		video_buffer[y*ROW_SIZE+byte]|=bit;
 206              		.loc 1 83 0
 207 0042 044A     		ldr	r2, .L15
 208              	.LVL28:
 209 0044 C900     		lsl	r1, r1, #3
 210              	.LVL29:
 211 0046 6D18     		add	r5, r5, r1
 212              	.LVL30:
 213 0048 505D     		ldrb	r0, [r2, r5]
 214              	.LVL31:
 215 004a 0343     		orr	r3, r0
 216              	.LVL32:
 217 004c DBB2     		uxtb	r3, r3
 218 004e 5355     		strb	r3, [r2, r5]
  84:../src/display.c **** 		break;
 219              		.loc 1 84 0
 220 0050 E7E7     		b	.L9
 221              	.L16:
 222 0052 C046     		.align	2
 223              	.L15:
 224 0054 00000000 		.word	video_buffer
 225              		.cfi_endproc
 226              	.LFE34:
 228              		.section	.text.clear_screen,"ax",%progbits
 229              		.align	2
 230              		.global	clear_screen
 231              		.code	16
 232              		.thumb_func
 234              	clear_screen:
 235              	.LFB35:
  90:../src/display.c **** 
  91:../src/display.c **** 
  92:../src/display.c **** 
  93:../src/display.c **** 
  94:../src/display.c **** void clear_screen(){
 236              		.loc 1 94 0
 237              		.cfi_startproc
 238              	.LVL33:
  95:../src/display.c **** 	int i;
  96:../src/display.c **** 	for (i=BUFFER_SIZE;i;i--) video_buffer[i]=0;
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 7


 239              		.loc 1 96 0
 240 0000 E023     		mov	r3, #224
 241 0002 0449     		ldr	r1, .L20
 242 0004 5B00     		lsl	r3, r3, #1
 243 0006 0022     		mov	r2, #0
 244              	.LVL34:
 245              	.L19:
 246              		.loc 1 96 0 is_stmt 0 discriminator 2
 247 0008 CA54     		strb	r2, [r1, r3]
 248 000a 013B     		sub	r3, r3, #1
 249              	.LVL35:
 250 000c 002B     		cmp	r3, #0
 251 000e FBD1     		bne	.L19
  97:../src/display.c **** }//f()
 252              		.loc 1 97 0 is_stmt 1
 253              		@ sp needed
 254 0010 7047     		bx	lr
 255              	.L21:
 256 0012 C046     		.align	2
 257              	.L20:
 258 0014 00000000 		.word	video_buffer
 259              		.cfi_endproc
 260              	.LFE35:
 262              		.global	digits
 263              		.section	.rodata.digits,"a",%progbits
 264              		.align	2
 265              		.set	.LANCHOR0,. + 0
 268              	digits:
 269 0000 0E       		.byte	14
 270 0001 0A       		.byte	10
 271 0002 0A       		.byte	10
 272 0003 0A       		.byte	10
 273 0004 0E       		.byte	14
 274 0005 04       		.byte	4
 275 0006 0C       		.byte	12
 276 0007 04       		.byte	4
 277 0008 04       		.byte	4
 278 0009 0E       		.byte	14
 279 000a 0E       		.byte	14
 280 000b 02       		.byte	2
 281 000c 0E       		.byte	14
 282 000d 08       		.byte	8
 283 000e 0E       		.byte	14
 284 000f 0E       		.byte	14
 285 0010 02       		.byte	2
 286 0011 0E       		.byte	14
 287 0012 02       		.byte	2
 288 0013 0E       		.byte	14
 289 0014 0A       		.byte	10
 290 0015 0A       		.byte	10
 291 0016 0E       		.byte	14
 292 0017 02       		.byte	2
 293 0018 02       		.byte	2
 294 0019 0E       		.byte	14
 295 001a 08       		.byte	8
 296 001b 0E       		.byte	14
 297 001c 02       		.byte	2
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 8


 298 001d 0E       		.byte	14
 299 001e 08       		.byte	8
 300 001f 08       		.byte	8
 301 0020 0E       		.byte	14
 302 0021 0A       		.byte	10
 303 0022 0E       		.byte	14
 304 0023 0E       		.byte	14
 305 0024 02       		.byte	2
 306 0025 02       		.byte	2
 307 0026 02       		.byte	2
 308 0027 02       		.byte	2
 309 0028 0E       		.byte	14
 310 0029 0A       		.byte	10
 311 002a 0E       		.byte	14
 312 002b 0A       		.byte	10
 313 002c 0E       		.byte	14
 314 002d 0E       		.byte	14
 315 002e 0A       		.byte	10
 316 002f 0E       		.byte	14
 317 0030 02       		.byte	2
 318 0031 02       		.byte	2
 319 0032 0000     		.text
 320              	.Letext0:
 321              		.file 2 "../src/tvout.h"
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 display.c
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:20     .text.write_score:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:25     .text.write_score:00000000 write_score
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:121    .text.write_score:00000064 $d
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:127    .text.plot:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:132    .text.plot:00000000 plot
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:224    .text.plot:00000054 $d
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:229    .text.clear_screen:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:234    .text.clear_screen:00000000 clear_screen
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:258    .text.clear_screen:00000014 $d
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:268    .rodata.digits:00000000 digits
C:\Users\Jacques\AppData\Local\Temp\ccnnCJkR.s:264    .rodata.digits:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_idiv
__aeabi_idivmod
video_buffer
