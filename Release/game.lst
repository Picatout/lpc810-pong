ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"game.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_paddle,"ax",%progbits
  18              		.align	2
  19              		.global	draw_paddle
  20              		.code	16
  21              		.thumb_func
  23              	draw_paddle:
  24              	.LFB33:
  25              		.file 1 "../src/game.c"
   1:../src/game.c ****  /*
   2:../src/game.c **** * Copyright 2014, Jacques Deschênes
   3:../src/game.c **** * This file is part of LPC810-pong.
   4:../src/game.c **** *
   5:../src/game.c **** *     LPC810-pong is free software: you can redistribute it and/or modify
   6:../src/game.c **** *     it under the terms of the GNU General Public License as published by
   7:../src/game.c **** *     the Free Software Foundation, either version 3 of the License, or
   8:../src/game.c **** *     (at your option) any later version.
   9:../src/game.c **** *
  10:../src/game.c **** *     VPC-32 is distributed in the hope that it will be useful,
  11:../src/game.c **** *     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../src/game.c **** *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:../src/game.c **** *     GNU General Public License for more details.
  14:../src/game.c **** *
  15:../src/game.c **** *     You should have received a copy of the GNU General Public License
  16:../src/game.c **** *     along with LPC810-pong.  If not, see <http://www.gnu.org/licenses/>.
  17:../src/game.c **** */
  18:../src/game.c **** 
  19:../src/game.c **** #include <stdlib.h>
  20:../src/game.c **** #include "game.h"
  21:../src/game.c **** #include "display.h"
  22:../src/game.c **** 
  23:../src/game.c **** // constantes reliées au jeux
  24:../src/game.c **** #define LEFT_PLAYER (LEFT_POT)
  25:../src/game.c **** #define RIGHT_PLAYER (RIGHT_POT)
  26:../src/game.c **** #define NO_WINNER (3)
  27:../src/game.c **** #define PADDLE_HEIGHT (3)
  28:../src/game.c **** #define PADDLE_VMIN (7)
  29:../src/game.c **** #define PADDLE_VMAX (VRES-PADDLE_HEIGHT-1)
  30:../src/game.c **** #define TOP_BORDER (12)
  31:../src/game.c **** #define BOTTOM_BORDER (TOP_BORDER+33)
  32:../src/game.c **** #define LEFT_BORDER (0)
  33:../src/game.c **** #define RIGHT_BORDER (HRES-1)
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 2


  34:../src/game.c **** #define SHOW (1)
  35:../src/game.c **** #define HIDE (0)
  36:../src/game.c **** #define CENTER (((VRES-TOP_BORDER)>>1)+TOP_BORDER-1)
  37:../src/game.c **** #define WIN_SCORE (21)
  38:../src/game.c **** 
  39:../src/game.c **** typedef struct ball_struct{
  40:../src/game.c **** 	int x;
  41:../src/game.c **** 	int y;
  42:../src/game.c **** 	int dx;
  43:../src/game.c **** 	int dy;
  44:../src/game.c **** 	int skip;
  45:../src/game.c **** }ball_t;
  46:../src/game.c **** 
  47:../src/game.c **** 
  48:../src/game.c **** unsigned char score[2]; // pointage joueurs
  49:../src/game.c **** unsigned char paddle[2]; // position raquettes
  50:../src/game.c **** ball_t ball; //position de la balle
  51:../src/game.c **** unsigned char winner=LEFT_PLAYER;
  52:../src/game.c **** unsigned char server;
  53:../src/game.c **** unsigned char running;
  54:../src/game.c **** 
  55:../src/game.c **** 
  56:../src/game.c **** 
  57:../src/game.c **** // affiche ou cache la raquette
  58:../src/game.c **** void draw_paddle(int player,int show){
  26              		.loc 1 58 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              		.cfi_def_cfa_offset 20
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 5746     		mov	r7, r10
  37 0004 4E46     		mov	r6, r9
  38 0006 4546     		mov	r5, r8
  39 0008 E0B4     		push	{r5, r6, r7}
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 8, -32
  42              		.cfi_offset 9, -28
  43              		.cfi_offset 10, -24
  59:../src/game.c **** 	char mask;
  60:../src/game.c **** 	int i,offset;
  61:../src/game.c **** 	if (!player){
  44              		.loc 1 61 0
  45 000a 0028     		cmp	r0, #0
  46 000c 26D1     		bne	.L7
  62:../src/game.c **** 		mask=128;
  47              		.loc 1 62 0
  48 000e 8022     		mov	r2, #128
  61:../src/game.c **** 	if (!player){
  49              		.loc 1 61 0
  50 0010 0026     		mov	r6, #0
  51              		.loc 1 62 0
  52 0012 9246     		mov	r10, r2
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 3


  53              	.L2:
  54              	.LVL1:
  55 0014 134C     		ldr	r4, .L9
  63:../src/game.c **** 		offset=0;
  64:../src/game.c **** 	}else{
  65:../src/game.c **** 		mask=1;
  66:../src/game.c **** 		offset=7;
  67:../src/game.c **** 	}//if
  68:../src/game.c **** 	for (i=0;i<PADDLE_HEIGHT;i++){
  69:../src/game.c **** 		if (show){
  70:../src/game.c **** 			video_buffer[(paddle[player]+i)*ROW_SIZE+offset]|=mask;
  71:../src/game.c **** 		}else{
  72:../src/game.c **** 			video_buffer[(paddle[player]+i)*ROW_SIZE+offset]&=~mask;
  56              		.loc 1 72 0
  57 0016 5546     		mov	r5, r10
  58 0018 ED43     		mvn	r5, r5
  59 001a 134A     		ldr	r2, .L9+4
  68:../src/game.c **** 	for (i=0;i<PADDLE_HEIGHT;i++){
  60              		.loc 1 68 0
  61 001c 0023     		mov	r3, #0
  62 001e A146     		mov	r9, r4
  63              		.loc 1 72 0
  64 0020 A846     		mov	r8, r5
  65              	.LVL2:
  66              	.L6:
  69:../src/game.c **** 		if (show){
  67              		.loc 1 69 0
  68 0022 0029     		cmp	r1, #0
  69 0024 10D0     		beq	.L3
  70:../src/game.c **** 			video_buffer[(paddle[player]+i)*ROW_SIZE+offset]|=mask;
  70              		.loc 1 70 0
  71 0026 4F46     		mov	r7, r9
  72 0028 3C5C     		ldrb	r4, [r7, r0]
  73 002a 5746     		mov	r7, r10
  74 002c E418     		add	r4, r4, r3
  75 002e E400     		lsl	r4, r4, #3
  76 0030 A419     		add	r4, r4, r6
  77 0032 155D     		ldrb	r5, [r2, r4]
  78 0034 3D43     		orr	r5, r7
  79 0036 1555     		strb	r5, [r2, r4]
  80              	.L4:
  68:../src/game.c **** 	for (i=0;i<PADDLE_HEIGHT;i++){
  81              		.loc 1 68 0
  82 0038 0133     		add	r3, r3, #1
  83              	.LVL3:
  84 003a 032B     		cmp	r3, #3
  85 003c F1D1     		bne	.L6
  73:../src/game.c **** 		}
  74:../src/game.c **** 	}//for
  75:../src/game.c **** }//f()
  86              		.loc 1 75 0
  87              		@ sp needed
  88              	.LVL4:
  89 003e 1CBC     		pop	{r2, r3, r4}
  90 0040 9046     		mov	r8, r2
  91 0042 9946     		mov	r9, r3
  92 0044 A246     		mov	r10, r4
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 4


  93 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
  94              	.LVL5:
  95              	.L3:
  72:../src/game.c **** 			video_buffer[(paddle[player]+i)*ROW_SIZE+offset]&=~mask;
  96              		.loc 1 72 0
  97 0048 4D46     		mov	r5, r9
  98 004a 2C5C     		ldrb	r4, [r5, r0]
  99 004c 4546     		mov	r5, r8
 100 004e E418     		add	r4, r4, r3
 101 0050 E400     		lsl	r4, r4, #3
 102 0052 A419     		add	r4, r4, r6
 103 0054 175D     		ldrb	r7, [r2, r4]
 104 0056 3D40     		and	r5, r7
 105 0058 1555     		strb	r5, [r2, r4]
 106 005a EDE7     		b	.L4
 107              	.LVL6:
 108              	.L7:
  65:../src/game.c **** 		mask=1;
 109              		.loc 1 65 0
 110 005c 0123     		mov	r3, #1
 111 005e 0726     		mov	r6, #7
 112 0060 9A46     		mov	r10, r3
 113 0062 D7E7     		b	.L2
 114              	.L10:
 115              		.align	2
 116              	.L9:
 117 0064 00000000 		.word	paddle
 118 0068 00000000 		.word	video_buffer
 119              		.cfi_endproc
 120              	.LFE33:
 122              		.section	.text.move_paddle,"ax",%progbits
 123              		.align	2
 124              		.global	move_paddle
 125              		.code	16
 126              		.thumb_func
 128              	move_paddle:
 129              	.LFB34:
  76:../src/game.c **** 
  77:../src/game.c **** 
  78:../src/game.c **** // déplace la raquette du joueur
  79:../src/game.c **** void move_paddle(int player){
 130              		.loc 1 79 0
 131              		.cfi_startproc
 132              	.LVL7:
 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 4, -16
 136              		.cfi_offset 5, -12
 137              		.cfi_offset 6, -8
 138              		.cfi_offset 14, -4
 139              		.loc 1 79 0
 140 0002 041C     		mov	r4, r0
  80:../src/game.c **** 	int new_y;
  81:../src/game.c **** 	new_y=read_pot(player)+TOP_BORDER;
 141              		.loc 1 81 0
 142 0004 FFF7FEFF 		bl	read_pot
 143              	.LVL8:
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 5


  82:../src/game.c **** 	if (new_y!=paddle[player]){
 144              		.loc 1 82 0
 145 0008 074D     		ldr	r5, .L13
  81:../src/game.c **** 	new_y=read_pot(player)+TOP_BORDER;
 146              		.loc 1 81 0
 147 000a 061C     		mov	r6, r0
 148              		.loc 1 82 0
 149 000c 2B5D     		ldrb	r3, [r5, r4]
  81:../src/game.c **** 	new_y=read_pot(player)+TOP_BORDER;
 150              		.loc 1 81 0
 151 000e 0C36     		add	r6, r6, #12
 152              	.LVL9:
 153              		.loc 1 82 0
 154 0010 B342     		cmp	r3, r6
 155 0012 08D0     		beq	.L11
  83:../src/game.c **** 		draw_paddle(player, HIDE);
 156              		.loc 1 83 0
 157 0014 201C     		mov	r0, r4
 158 0016 0021     		mov	r1, #0
 159 0018 FFF7FEFF 		bl	draw_paddle
 160              	.LVL10:
  84:../src/game.c **** 		paddle[player]=new_y;
 161              		.loc 1 84 0
 162 001c 2E55     		strb	r6, [r5, r4]
  85:../src/game.c **** 		draw_paddle(player,SHOW);
 163              		.loc 1 85 0
 164 001e 201C     		mov	r0, r4
 165 0020 0121     		mov	r1, #1
 166 0022 FFF7FEFF 		bl	draw_paddle
 167              	.LVL11:
 168              	.L11:
  86:../src/game.c **** 	}
  87:../src/game.c **** }//f()
 169              		.loc 1 87 0
 170              		@ sp needed
 171              	.LVL12:
 172              	.LVL13:
 173 0026 70BD     		pop	{r4, r5, r6, pc}
 174              	.L14:
 175              		.align	2
 176              	.L13:
 177 0028 00000000 		.word	paddle
 178              		.cfi_endproc
 179              	.LFE34:
 181              		.section	.text.sound_miss,"ax",%progbits
 182              		.align	2
 183              		.global	sound_miss
 184              		.code	16
 185              		.thumb_func
 187              	sound_miss:
 188              	.LFB35:
  88:../src/game.c **** 
  89:../src/game.c **** 
  90:../src/game.c **** // fait entendre un son lorsqu'un joueur manque la balle
  91:../src/game.c **** void sound_miss(){
 189              		.loc 1 91 0
 190              		.cfi_startproc
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 6


 191              	.LVL14:
 192 0000 38B5     		push	{r3, r4, r5, lr}
 193              		.cfi_def_cfa_offset 16
 194              		.cfi_offset 3, -16
 195              		.cfi_offset 4, -12
 196              		.cfi_offset 5, -8
 197              		.cfi_offset 14, -4
  92:../src/game.c **** 	int f,s;
  93:../src/game.c **** 	f=1024;
 198              		.loc 1 93 0
 199 0002 8024     		mov	r4, #128
  94:../src/game.c **** 	while ((s=f>>4)){
 200              		.loc 1 94 0
 201 0004 4025     		mov	r5, #64
  93:../src/game.c **** 	f=1024;
 202              		.loc 1 93 0
 203 0006 E400     		lsl	r4, r4, #3
 204              	.LVL15:
 205              	.L17:
  95:../src/game.c **** 		tone(f,2);
 206              		.loc 1 95 0
 207 0008 201C     		mov	r0, r4
 208 000a 0221     		mov	r1, #2
  96:../src/game.c **** 		f -= s;
 209              		.loc 1 96 0
 210 000c 641B     		sub	r4, r4, r5
 211              	.LVL16:
  95:../src/game.c **** 		tone(f,2);
 212              		.loc 1 95 0
 213 000e FFF7FEFF 		bl	tone
 214              	.LVL17:
  94:../src/game.c **** 	while ((s=f>>4)){
 215              		.loc 1 94 0
 216 0012 2511     		asr	r5, r4, #4
 217              	.LVL18:
 218 0014 F8D1     		bne	.L17
  97:../src/game.c **** 	}
  98:../src/game.c **** }//f()
 219              		.loc 1 98 0
 220              		@ sp needed
 221              	.LVL19:
 222              	.LVL20:
 223 0016 38BD     		pop	{r3, r4, r5, pc}
 224              		.cfi_endproc
 225              	.LFE35:
 227              		.section	.text.sound_rebound,"ax",%progbits
 228              		.align	2
 229              		.global	sound_rebound
 230              		.code	16
 231              		.thumb_func
 233              	sound_rebound:
 234              	.LFB36:
  99:../src/game.c **** 
 100:../src/game.c **** // fait entendre un son lorsque la balle rebondie
 101:../src/game.c **** void sound_rebound(){
 235              		.loc 1 101 0
 236              		.cfi_startproc
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 7


 237 0000 08B5     		push	{r3, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 102:../src/game.c ****     tone(100,30);
 241              		.loc 1 102 0
 242 0002 6420     		mov	r0, #100
 243 0004 1E21     		mov	r1, #30
 244 0006 FFF7FEFF 		bl	tone
 245              	.LVL21:
 103:../src/game.c **** }//f()
 246              		.loc 1 103 0
 247              		@ sp needed
 248 000a 08BD     		pop	{r3, pc}
 249              		.cfi_endproc
 250              	.LFE36:
 252              		.section	.text.game_over,"ax",%progbits
 253              		.align	2
 254              		.global	game_over
 255              		.code	16
 256              		.thumb_func
 258              	game_over:
 259              	.LFB37:
 104:../src/game.c **** 
 105:../src/game.c **** const char WINNER[32][4]={
 106:../src/game.c **** 	{0x80,0x1f,0x00,0x20},
 107:../src/game.c **** 	{0x80,0x20,0x80,0x20},
 108:../src/game.c **** 	{0x40,0x2a,0x80,0x40},
 109:../src/game.c **** 	{0x40,0x20,0x80,0x40},
 110:../src/game.c **** 	{0x60,0x31,0x80,0xc0},
 111:../src/game.c **** 	{0x20,0x1b,0x00,0x80},
 112:../src/game.c **** 	{0x30,0x0e,0x01,0x80},
 113:../src/game.c **** 	{0x18,0x0a,0x03,0x00},
 114:../src/game.c **** 	{0x0f,0xfb,0xfe,0x00},
 115:../src/game.c **** 	{0x00,0x40,0x40,0x00},
 116:../src/game.c **** 	{0x00,0x51,0x40,0x00},
 117:../src/game.c **** 	{0x00,0x55,0x40,0x00},
 118:../src/game.c **** 	{0x00,0x55,0x40,0x00},
 119:../src/game.c **** 	{0x00,0x55,0x40,0x00},
 120:../src/game.c **** 	{0x00,0x5b,0x40,0x00},
 121:../src/game.c **** 	{0x00,0x40,0x40,0x00},
 122:../src/game.c **** 	{0x00,0x40,0x40,0x00},
 123:../src/game.c **** 	{0x00,0x40,0x40,0x00},
 124:../src/game.c **** 	{0x00,0x60,0xc0,0x00},
 125:../src/game.c **** 	{0x00,0x3f,0x80,0x00},
 126:../src/game.c **** 	{0x00,0x3b,0x80,0x00},
 127:../src/game.c **** 	{0x00,0x31,0x80,0x00},
 128:../src/game.c **** 	{0x00,0x71,0xc0,0x00},
 129:../src/game.c **** 	{0x00,0x60,0xc0,0x00},
 130:../src/game.c **** 	{0x00,0x60,0xc0,0x00},
 131:../src/game.c **** 	{0x00,0x60,0xc0,0x00},
 132:../src/game.c **** 	{0x00,0x60,0xc0,0x00},
 133:../src/game.c **** 	{0x00,0xc0,0x60,0x00},
 134:../src/game.c **** 	{0x00,0xc0,0x60,0x00},
 135:../src/game.c **** 	{0x00,0xc0,0x60,0x00},
 136:../src/game.c **** 	{0x01,0x80,0x30,0x00},
 137:../src/game.c **** 	{0x03,0x80,0x38,0x00}
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 8


 138:../src/game.c **** };
 139:../src/game.c **** 
 140:../src/game.c **** const int gonna_fly_now[]={392,250,392,125,392,125,392,250,392,250,392,125,
 141:../src/game.c **** 		                   392,125,494,250,392,125,392,125,392,250,494,250,
 142:../src/game.c **** 		                   494,250,494,125,494,125,494,250,494,125,494,125,
 143:../src/game.c **** 		                   587,250,494,125,494,125,494,500,0,0};
 144:../src/game.c **** 
 145:../src/game.c **** void game_over(){
 260              		.loc 1 145 0
 261              		.cfi_startproc
 262 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 263              		.cfi_def_cfa_offset 24
 264              		.cfi_offset 3, -24
 265              		.cfi_offset 4, -20
 266              		.cfi_offset 5, -16
 267              		.cfi_offset 6, -12
 268              		.cfi_offset 7, -8
 269              		.cfi_offset 14, -4
 146:../src/game.c **** 	int i,j,offset;
 147:../src/game.c **** 	if (score[LEFT_PLAYER]==21){
 270              		.loc 1 147 0
 271 0002 134B     		ldr	r3, .L27
 272 0004 1B78     		ldrb	r3, [r3]
 273 0006 152B     		cmp	r3, #21
 274 0008 1DD0     		beq	.L26
 148:../src/game.c **** 		winner=LEFT_PLAYER;
 149:../src/game.c **** 		offset=0;
 150:../src/game.c **** 	}else{
 151:../src/game.c **** 		winner=RIGHT_PLAYER;
 275              		.loc 1 151 0
 276 000a 124B     		ldr	r3, .L27+4
 277 000c 0122     		mov	r2, #1
 278 000e 1A70     		strb	r2, [r3]
 279              	.LVL22:
 280 0010 0426     		mov	r6, #4
 281              	.LVL23:
 282              	.L21:
 283 0012 114D     		ldr	r5, .L27+8
 284 0014 1149     		ldr	r1, .L27+12
 285 0016 2F1C     		mov	r7, r5
 286 0018 6836     		add	r6, r6, #104
 287 001a 8037     		add	r7, r7, #128
 288              	.LVL24:
 289              	.L22:
 290              		.loc 1 151 0 is_stmt 0 discriminator 1
 291 001c 0023     		mov	r3, #0
 292              	.LVL25:
 293              	.L25:
 294 001e F218     		add	r2, r6, r3
 152:../src/game.c **** 		offset=4;
 153:../src/game.c **** 	}
 154:../src/game.c **** 	for (i=0;i<32;i++){
 155:../src/game.c **** 		for (j=0;j<4;j++){
 156:../src/game.c **** 			video_buffer[(i+TOP_BORDER+1)*ROW_SIZE+j+offset]|=WINNER[i][j];
 295              		.loc 1 156 0 is_stmt 1 discriminator 2
 296 0020 8C5C     		ldrb	r4, [r1, r2]
 297 0022 E85C     		ldrb	r0, [r5, r3]
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 9


 155:../src/game.c **** 		for (j=0;j<4;j++){
 298              		.loc 1 155 0 discriminator 2
 299 0024 0133     		add	r3, r3, #1
 300              	.LVL26:
 301              		.loc 1 156 0 discriminator 2
 302 0026 2043     		orr	r0, r4
 303 0028 8854     		strb	r0, [r1, r2]
 155:../src/game.c **** 		for (j=0;j<4;j++){
 304              		.loc 1 155 0 discriminator 2
 305 002a 042B     		cmp	r3, #4
 306 002c F7D1     		bne	.L25
 307 002e 0435     		add	r5, r5, #4
 308 0030 0836     		add	r6, r6, #8
 154:../src/game.c **** 	for (i=0;i<32;i++){
 309              		.loc 1 154 0
 310 0032 BD42     		cmp	r5, r7
 311 0034 F2D1     		bne	.L22
 157:../src/game.c **** 		}
 158:../src/game.c **** 	}
 159:../src/game.c **** 	play_tune(gonna_fly_now,60);
 312              		.loc 1 159 0
 313 0036 0A48     		ldr	r0, .L27+16
 314 0038 3C21     		mov	r1, #60
 315 003a FFF7FEFF 		bl	play_tune
 316              	.LVL27:
 160:../src/game.c **** 	running=0;
 317              		.loc 1 160 0
 318 003e 094B     		ldr	r3, .L27+20
 319 0040 0022     		mov	r2, #0
 320 0042 1A70     		strb	r2, [r3]
 161:../src/game.c **** }//f()
 321              		.loc 1 161 0
 322              		@ sp needed
 323 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 324              	.L26:
 148:../src/game.c **** 		winner=LEFT_PLAYER;
 325              		.loc 1 148 0
 326 0046 034B     		ldr	r3, .L27+4
 327 0048 0022     		mov	r2, #0
 328 004a 1A70     		strb	r2, [r3]
 329              	.LVL28:
 330 004c 0026     		mov	r6, #0
 331 004e E0E7     		b	.L21
 332              	.L28:
 333              		.align	2
 334              	.L27:
 335 0050 00000000 		.word	score
 336 0054 00000000 		.word	.LANCHOR0
 337 0058 00000000 		.word	.LANCHOR1
 338 005c 00000000 		.word	video_buffer
 339 0060 00000000 		.word	.LANCHOR2
 340 0064 00000000 		.word	running
 341              		.cfi_endproc
 342              	.LFE37:
 344              		.global	__aeabi_idivmod
 345              		.section	.text.wait_service,"ax",%progbits
 346              		.align	2
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 10


 347              		.global	wait_service
 348              		.code	16
 349              		.thumb_func
 351              	wait_service:
 352              	.LFB38:
 162:../src/game.c **** 
 163:../src/game.c **** // attend que le joueur déplace sa raquette
 164:../src/game.c **** void wait_service(){
 353              		.loc 1 164 0
 354              		.cfi_startproc
 355 0000 70B5     		push	{r4, r5, r6, lr}
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 4, -16
 358              		.cfi_offset 5, -12
 359              		.cfi_offset 6, -8
 360              		.cfi_offset 14, -4
 165:../src/game.c **** 	int y;
 166:../src/game.c **** 	paddle[server]=read_pot(server)+TOP_BORDER;
 361              		.loc 1 166 0
 362 0002 194C     		ldr	r4, .L36
 363 0004 2678     		ldrb	r6, [r4]
 364 0006 301C     		mov	r0, r6
 365 0008 FFF7FEFF 		bl	read_pot
 366              	.LVL29:
 367 000c 174D     		ldr	r5, .L36+4
 368 000e 0C30     		add	r0, r0, #12
 369 0010 A855     		strb	r0, [r5, r6]
 167:../src/game.c **** 	while (1){
 168:../src/game.c **** 		y=read_pot(server)+TOP_BORDER;
 169:../src/game.c **** 		if (y<paddle[server]-1 || y>paddle[server]+1) break;
 170:../src/game.c **** 		move_paddle(1-server);// l'autre joueur peut se déplacer en attendant le service.
 370              		.loc 1 170 0
 371 0012 0126     		mov	r6, #1
 372 0014 05E0     		b	.L31
 373              	.LVL30:
 374              	.L34:
 169:../src/game.c **** 		if (y<paddle[server]-1 || y>paddle[server]+1) break;
 375              		.loc 1 169 0 discriminator 1
 376 0016 0133     		add	r3, r3, #1
 377 0018 9842     		cmp	r0, r3
 378 001a 0BDC     		bgt	.L30
 379              		.loc 1 170 0
 380 001c B01A     		sub	r0, r6, r2
 381              	.LVL31:
 382 001e FFF7FEFF 		bl	move_paddle
 383              	.LVL32:
 384              	.L31:
 168:../src/game.c **** 		y=read_pot(server)+TOP_BORDER;
 385              		.loc 1 168 0
 386 0022 2078     		ldrb	r0, [r4]
 387 0024 FFF7FEFF 		bl	read_pot
 388              	.LVL33:
 169:../src/game.c **** 		if (y<paddle[server]-1 || y>paddle[server]+1) break;
 389              		.loc 1 169 0
 390 0028 2278     		ldrb	r2, [r4]
 168:../src/game.c **** 		y=read_pot(server)+TOP_BORDER;
 391              		.loc 1 168 0
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 11


 392 002a 0C30     		add	r0, r0, #12
 393              	.LVL34:
 169:../src/game.c **** 		if (y<paddle[server]-1 || y>paddle[server]+1) break;
 394              		.loc 1 169 0
 395 002c AB5C     		ldrb	r3, [r5, r2]
 396 002e 591E     		sub	r1, r3, #1
 397 0030 8842     		cmp	r0, r1
 398 0032 F0DA     		bge	.L34
 399              	.L30:
 171:../src/game.c **** 	}
 172:../src/game.c **** 	ball.dy=rand()%3 - 1;
 400              		.loc 1 172 0
 401 0034 FFF7FEFF 		bl	rand
 402              	.LVL35:
 403 0038 0321     		mov	r1, #3
 404 003a FFF7FEFF 		bl	__aeabi_idivmod
 405              	.LVL36:
 406 003e 0C4D     		ldr	r5, .L36+8
 173:../src/game.c **** 	if (server==LEFT_PLAYER){
 407              		.loc 1 173 0
 408 0040 2378     		ldrb	r3, [r4]
 172:../src/game.c **** 	ball.dy=rand()%3 - 1;
 409              		.loc 1 172 0
 410 0042 0139     		sub	r1, r1, #1
 411 0044 E960     		str	r1, [r5, #12]
 412              		.loc 1 173 0
 413 0046 002B     		cmp	r3, #0
 414 0048 0BD0     		beq	.L35
 174:../src/game.c **** 		ball.dx=1;
 175:../src/game.c **** 	}else{
 176:../src/game.c **** 		ball.dx=-1;
 415              		.loc 1 176 0
 416 004a 0123     		mov	r3, #1
 417 004c 5B42     		neg	r3, r3
 418 004e AB60     		str	r3, [r5, #8]
 419              	.L33:
 177:../src/game.c **** 	}
 178:../src/game.c **** 	ball.skip=rand()%2;
 420              		.loc 1 178 0
 421 0050 FFF7FEFF 		bl	rand
 422              	.LVL37:
 423 0054 C30F     		lsr	r3, r0, #31
 424 0056 C018     		add	r0, r0, r3
 425 0058 0122     		mov	r2, #1
 426 005a 1040     		and	r0, r2
 427 005c C31A     		sub	r3, r0, r3
 428 005e 2B61     		str	r3, [r5, #16]
 179:../src/game.c **** }//f()
 429              		.loc 1 179 0
 430              		@ sp needed
 431 0060 70BD     		pop	{r4, r5, r6, pc}
 432              	.L35:
 174:../src/game.c **** 		ball.dx=1;
 433              		.loc 1 174 0
 434 0062 0123     		mov	r3, #1
 435 0064 AB60     		str	r3, [r5, #8]
 436 0066 F3E7     		b	.L33
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 12


 437              	.L37:
 438              		.align	2
 439              	.L36:
 440 0068 00000000 		.word	server
 441 006c 00000000 		.word	paddle
 442 0070 00000000 		.word	ball
 443              		.cfi_endproc
 444              	.LFE38:
 446              		.section	.text.ball_missed,"ax",%progbits
 447              		.align	2
 448              		.global	ball_missed
 449              		.code	16
 450              		.thumb_func
 452              	ball_missed:
 453              	.LFB39:
 180:../src/game.c **** 
 181:../src/game.c **** // le joueur a manquer la balle
 182:../src/game.c **** // mettre à jour le pointage
 183:../src/game.c **** // faire entendre le son associé
 184:../src/game.c **** // player est le joueur qui a manqué la balle.
 185:../src/game.c **** void ball_missed(int player){
 454              		.loc 1 185 0
 455              		.cfi_startproc
 456              	.LVL38:
 457 0000 70B5     		push	{r4, r5, r6, lr}
 458              		.cfi_def_cfa_offset 16
 459              		.cfi_offset 4, -16
 460              		.cfi_offset 5, -12
 461              		.cfi_offset 6, -8
 462              		.cfi_offset 14, -4
 186:../src/game.c **** 	plot(ball.x,ball.y,INVERT);
 463              		.loc 1 186 0
 464 0002 234C     		ldr	r4, .L47
 465 0004 0222     		mov	r2, #2
 466 0006 6168     		ldr	r1, [r4, #4]
 185:../src/game.c **** void ball_missed(int player){
 467              		.loc 1 185 0
 468 0008 061C     		mov	r6, r0
 469              		.loc 1 186 0
 470 000a 2068     		ldr	r0, [r4]
 471              	.LVL39:
 472 000c FFF7FEFF 		bl	plot
 473              	.LVL40:
 187:../src/game.c **** 	sound_miss();
 188:../src/game.c **** 	plot(ball.x,ball.y,INVERT);
 189:../src/game.c **** 	ball.dx=0;
 474              		.loc 1 189 0
 475 0010 0025     		mov	r5, #0
 187:../src/game.c **** 	sound_miss();
 476              		.loc 1 187 0
 477 0012 FFF7FEFF 		bl	sound_miss
 478              	.LVL41:
 188:../src/game.c **** 	plot(ball.x,ball.y,INVERT);
 479              		.loc 1 188 0
 480 0016 2068     		ldr	r0, [r4]
 481 0018 6168     		ldr	r1, [r4, #4]
 482 001a 0222     		mov	r2, #2
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 13


 483 001c FFF7FEFF 		bl	plot
 484              	.LVL42:
 485              		.loc 1 189 0
 486 0020 A560     		str	r5, [r4, #8]
 190:../src/game.c **** 	ball.dy=0;
 487              		.loc 1 190 0
 488 0022 E560     		str	r5, [r4, #12]
 191:../src/game.c **** 	if (player==LEFT_PLAYER){
 489              		.loc 1 191 0
 490 0024 002E     		cmp	r6, #0
 491 0026 15D1     		bne	.L39
 192:../src/game.c **** 		score[RIGHT_PLAYER]++;
 492              		.loc 1 192 0
 493 0028 1A4D     		ldr	r5, .L47+4
 193:../src/game.c **** 		write_score(RIGHT_PLAYER,score[RIGHT_PLAYER]);
 494              		.loc 1 193 0
 495 002a 0120     		mov	r0, #1
 192:../src/game.c **** 		score[RIGHT_PLAYER]++;
 496              		.loc 1 192 0
 497 002c 6978     		ldrb	r1, [r5, #1]
 498 002e 0131     		add	r1, r1, #1
 499 0030 C9B2     		uxtb	r1, r1
 500 0032 6970     		strb	r1, [r5, #1]
 501              		.loc 1 193 0
 502 0034 FFF7FEFF 		bl	write_score
 503              	.LVL43:
 194:../src/game.c **** 		if (score[RIGHT_PLAYER]==WIN_SCORE){
 504              		.loc 1 194 0
 505 0038 6B78     		ldrb	r3, [r5, #1]
 506 003a 152B     		cmp	r3, #21
 507 003c 24D0     		beq	.L43
 195:../src/game.c **** 			game_over();
 196:../src/game.c **** 			return;
 197:../src/game.c **** 		}
 198:../src/game.c **** 		ball.x=RIGHT_BORDER-1;
 508              		.loc 1 198 0
 509 003e 3E23     		mov	r3, #62
 510 0040 2360     		str	r3, [r4]
 199:../src/game.c **** 		ball.y=paddle[RIGHT_PLAYER]+1;
 511              		.loc 1 199 0
 512 0042 154B     		ldr	r3, .L47+8
 200:../src/game.c **** 		server=RIGHT_PLAYER;
 513              		.loc 1 200 0
 514 0044 0122     		mov	r2, #1
 199:../src/game.c **** 		ball.y=paddle[RIGHT_PLAYER]+1;
 515              		.loc 1 199 0
 516 0046 5978     		ldrb	r1, [r3, #1]
 517              		.loc 1 200 0
 518 0048 144B     		ldr	r3, .L47+12
 199:../src/game.c **** 		ball.y=paddle[RIGHT_PLAYER]+1;
 519              		.loc 1 199 0
 520 004a 0131     		add	r1, r1, #1
 521 004c 6160     		str	r1, [r4, #4]
 522              		.loc 1 200 0
 523 004e 1A70     		strb	r2, [r3]
 524 0050 3E20     		mov	r0, #62
 525 0052 13E0     		b	.L42
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 14


 526              	.L39:
 201:../src/game.c **** 	}else{
 202:../src/game.c **** 		score[LEFT_PLAYER]++;
 527              		.loc 1 202 0
 528 0054 0F4E     		ldr	r6, .L47+4
 529              	.LVL44:
 203:../src/game.c **** 		write_score(LEFT_PLAYER,score[LEFT_PLAYER]);
 530              		.loc 1 203 0
 531 0056 0020     		mov	r0, #0
 202:../src/game.c **** 		score[LEFT_PLAYER]++;
 532              		.loc 1 202 0
 533 0058 3178     		ldrb	r1, [r6]
 534 005a 0131     		add	r1, r1, #1
 535 005c C9B2     		uxtb	r1, r1
 536 005e 3170     		strb	r1, [r6]
 537              		.loc 1 203 0
 538 0060 FFF7FEFF 		bl	write_score
 539              	.LVL45:
 204:../src/game.c **** 		if (score[LEFT_PLAYER]==WIN_SCORE){
 540              		.loc 1 204 0
 541 0064 3378     		ldrb	r3, [r6]
 542 0066 152B     		cmp	r3, #21
 543 0068 0ED0     		beq	.L43
 205:../src/game.c **** 			game_over();
 206:../src/game.c **** 			return;
 207:../src/game.c **** 		}
 208:../src/game.c **** 		ball.x=LEFT_BORDER+1;
 544              		.loc 1 208 0
 545 006a 0123     		mov	r3, #1
 546 006c 2360     		str	r3, [r4]
 209:../src/game.c **** 		ball.y=paddle[LEFT_PLAYER]+1;
 547              		.loc 1 209 0
 548 006e 0A4B     		ldr	r3, .L47+8
 210:../src/game.c **** 		server=LEFT_PLAYER;
 549              		.loc 1 210 0
 550 0070 0120     		mov	r0, #1
 209:../src/game.c **** 		ball.y=paddle[LEFT_PLAYER]+1;
 551              		.loc 1 209 0
 552 0072 1978     		ldrb	r1, [r3]
 553              		.loc 1 210 0
 554 0074 094B     		ldr	r3, .L47+12
 209:../src/game.c **** 		ball.y=paddle[LEFT_PLAYER]+1;
 555              		.loc 1 209 0
 556 0076 0131     		add	r1, r1, #1
 557 0078 6160     		str	r1, [r4, #4]
 558              		.loc 1 210 0
 559 007a 1D70     		strb	r5, [r3]
 560              	.L42:
 211:../src/game.c **** 	}
 212:../src/game.c **** 	plot(ball.x,ball.y,WHITE);
 561              		.loc 1 212 0
 562 007c 0122     		mov	r2, #1
 563 007e FFF7FEFF 		bl	plot
 564              	.LVL46:
 213:../src/game.c **** 	wait_service();
 565              		.loc 1 213 0
 566 0082 FFF7FEFF 		bl	wait_service
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 15


 567              	.LVL47:
 568              	.L38:
 214:../src/game.c **** }//f()
 569              		.loc 1 214 0
 570              		@ sp needed
 571 0086 70BD     		pop	{r4, r5, r6, pc}
 572              	.L43:
 195:../src/game.c **** 			game_over();
 573              		.loc 1 195 0
 574 0088 FFF7FEFF 		bl	game_over
 575              	.LVL48:
 196:../src/game.c **** 			return;
 576              		.loc 1 196 0
 577 008c FBE7     		b	.L38
 578              	.L48:
 579 008e C046     		.align	2
 580              	.L47:
 581 0090 00000000 		.word	ball
 582 0094 00000000 		.word	score
 583 0098 00000000 		.word	paddle
 584 009c 00000000 		.word	server
 585              		.cfi_endproc
 586              	.LFE39:
 588              		.section	.text.move_ball,"ax",%progbits
 589              		.align	2
 590              		.global	move_ball
 591              		.code	16
 592              		.thumb_func
 594              	move_ball:
 595              	.LFB40:
 215:../src/game.c **** 
 216:../src/game.c **** //déplace la balle et vérifie les collisions
 217:../src/game.c **** void move_ball(){
 596              		.loc 1 217 0
 597              		.cfi_startproc
 598 0000 70B5     		push	{r4, r5, r6, lr}
 599              		.cfi_def_cfa_offset 16
 600              		.cfi_offset 4, -16
 601              		.cfi_offset 5, -12
 602              		.cfi_offset 6, -8
 603              		.cfi_offset 14, -4
 218:../src/game.c ****     int new_x, new_y,bounce;
 219:../src/game.c **** 	if (!(ball.dx || ball.dy)) return;
 604              		.loc 1 219 0
 605 0002 4B4C     		ldr	r4, .L91
 606 0004 A168     		ldr	r1, [r4, #8]
 607 0006 0029     		cmp	r1, #0
 608 0008 02D1     		bne	.L50
 609              		.loc 1 219 0 is_stmt 0 discriminator 1
 610 000a E268     		ldr	r2, [r4, #12]
 611 000c 002A     		cmp	r2, #0
 612 000e 27D0     		beq	.L49
 613              	.L50:
 220:../src/game.c **** 	plot(ball.x,ball.y,INVERT);
 614              		.loc 1 220 0 is_stmt 1
 615 0010 2068     		ldr	r0, [r4]
 616 0012 6168     		ldr	r1, [r4, #4]
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 16


 617 0014 0222     		mov	r2, #2
 618 0016 FFF7FEFF 		bl	plot
 619              	.LVL49:
 221:../src/game.c ****     bounce=0;
 222:../src/game.c **** 
 223:../src/game.c **** 	if (ball.skip & ball.x){
 620              		.loc 1 223 0
 621 001a 2568     		ldr	r5, [r4]
 622 001c 2369     		ldr	r3, [r4, #16]
 623 001e 2B42     		tst	r3, r5
 624 0020 1FD1     		bne	.L82
 224:../src/game.c ****     	new_y=ball.y;
 225:../src/game.c ****     }else{
 226:../src/game.c ****     	new_y=ball.y+ball.dy;
 227:../src/game.c ****     }
 228:../src/game.c **** //  new_y=ball.y+ball.dy;
 229:../src/game.c **** 	new_x=ball.x+ball.dx;
 625              		.loc 1 229 0
 626 0022 A368     		ldr	r3, [r4, #8]
 226:../src/game.c ****     	new_y=ball.y+ball.dy;
 627              		.loc 1 226 0
 628 0024 6168     		ldr	r1, [r4, #4]
 629 0026 E268     		ldr	r2, [r4, #12]
 630              		.loc 1 229 0
 631 0028 ED18     		add	r5, r5, r3
 226:../src/game.c ****     	new_y=ball.y+ball.dy;
 632              		.loc 1 226 0
 633 002a 8E18     		add	r6, r1, r2
 634              	.LVL50:
 230:../src/game.c ****     if ((new_x==LEFT_BORDER)||(new_x==RIGHT_BORDER)){
 635              		.loc 1 230 0
 636 002c 002D     		cmp	r5, #0
 637 002e 1DD0     		beq	.L54
 638              	.L86:
 639              		.loc 1 230 0 is_stmt 0 discriminator 1
 640 0030 3F2D     		cmp	r5, #63
 641 0032 1BD0     		beq	.L54
 231:../src/game.c ****     	if (ball.dx<0){
 232:../src/game.c ****     		ball.x=new_x;
 233:../src/game.c ****     		ball.y=new_y;
 234:../src/game.c ****     		ball_missed(LEFT_PLAYER);
 235:../src/game.c ****     	}else{
 236:../src/game.c ****     		ball.x=new_x;
 237:../src/game.c ****     		ball.y=new_y;
 238:../src/game.c ****     		ball_missed(RIGHT_PLAYER);
 239:../src/game.c ****     	}
 240:../src/game.c ****     	return;
 241:../src/game.c ****     }
 242:../src/game.c ****     if (ball.dy && ((new_y==(TOP_BORDER+1))||(new_y==(BOTTOM_BORDER-1)))){
 642              		.loc 1 242 0 is_stmt 1
 643 0034 E168     		ldr	r1, [r4, #12]
 221:../src/game.c ****     bounce=0;
 644              		.loc 1 221 0
 645 0036 0022     		mov	r2, #0
 646              		.loc 1 242 0
 647 0038 0029     		cmp	r1, #0
 648 003a 05D0     		beq	.L57
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 17


 649              		.loc 1 242 0 is_stmt 0 discriminator 1
 650 003c 0D2E     		cmp	r6, #13
 651 003e 64D0     		beq	.L67
 652 0040 321C     		mov	r2, r6
 653 0042 2C3A     		sub	r2, r2, #44
 221:../src/game.c ****     bounce=0;
 654              		.loc 1 221 0 is_stmt 1 discriminator 1
 655 0044 5142     		neg	r1, r2
 656 0046 4A41     		adc	r2, r2, r1
 657              	.L57:
 658              	.LVL51:
 243:../src/game.c ****     	bounce=1; // rebond sur mur latéral.
 244:../src/game.c ****     }//if
 245:../src/game.c ****     if ((ball.dx<0) && (new_x==LEFT_BORDER+1)){
 659              		.loc 1 245 0
 660 0048 002B     		cmp	r3, #0
 661 004a 27DB     		blt	.L83
 662              	.L58:
 246:../src/game.c ****     		if ((new_y>=paddle[LEFT_PLAYER])&&(new_y<=(paddle[LEFT_PLAYER]+2))){
 247:../src/game.c ****     			bounce=1; // rebond sur raquette joueur de gauche.
 248:../src/game.c ****     			ball.dx=-ball.dx;
 249:../src/game.c ****     			ball.dy=rand()%3 - 1;
 250:../src/game.c ****     			ball.skip=rand()%2;
 251:../src/game.c ****     		}
 252:../src/game.c ****     }else if (new_x==RIGHT_BORDER-1){
 663              		.loc 1 252 0
 664 004c 3E2D     		cmp	r5, #62
 665 004e 3FD0     		beq	.L84
 666              	.L59:
 253:../src/game.c ****     		if ((new_y>=paddle[RIGHT_PLAYER])&&(new_y<=(paddle[RIGHT_PLAYER]+2))){
 254:../src/game.c ****     			bounce=1; // rebond sur raquette joueur de droite.
 255:../src/game.c ****     			ball.dx=-ball.dx;
 256:../src/game.c ****     			ball.dy=rand()%3 - 1;
 257:../src/game.c ****     			ball.skip=rand()%2;
 258:../src/game.c ****     		}
 259:../src/game.c ****    	}
 260:../src/game.c ****     if (bounce){
 667              		.loc 1 260 0
 668 0050 002A     		cmp	r2, #0
 669 0052 12D1     		bne	.L85
 261:../src/game.c ****     	if ((new_x==31) && ball.dy){
 262:../src/game.c ****     		ball.skip=rand()%2;
 263:../src/game.c ****     	}
 264:../src/game.c **** 		if ((new_y==BOTTOM_BORDER-1) && (ball.dy==1)){
 265:../src/game.c **** 			ball.dy=-1;
 266:../src/game.c **** 		}else if ((new_y==TOP_BORDER+1) && (ball.dy==-1)){
 267:../src/game.c **** 			ball.dy=1;
 268:../src/game.c **** 		}
 269:../src/game.c ****     	sound_rebound();
 270:../src/game.c ****     }//if
 271:../src/game.c ****     ball.x=new_x;
 272:../src/game.c ****     ball.y=new_y;
 273:../src/game.c ****     plot(new_x,new_y,INVERT);
 670              		.loc 1 273 0
 671 0054 281C     		mov	r0, r5
 672 0056 311C     		mov	r1, r6
 673 0058 0222     		mov	r2, #2
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 18


 674              	.LVL52:
 272:../src/game.c ****     ball.y=new_y;
 675              		.loc 1 272 0
 676 005a 60C4     		stmia	r4!, {r5, r6}
 677              		.loc 1 273 0
 678 005c FFF7FEFF 		bl	plot
 679              	.LVL53:
 680              	.L49:
 274:../src/game.c **** }//f()
 681              		.loc 1 274 0
 682              		@ sp needed
 683 0060 70BD     		pop	{r4, r5, r6, pc}
 684              	.LVL54:
 685              	.L82:
 229:../src/game.c **** 	new_x=ball.x+ball.dx;
 686              		.loc 1 229 0
 687 0062 A368     		ldr	r3, [r4, #8]
 224:../src/game.c ****     	new_y=ball.y;
 688              		.loc 1 224 0
 689 0064 6668     		ldr	r6, [r4, #4]
 690              	.LVL55:
 229:../src/game.c **** 	new_x=ball.x+ball.dx;
 691              		.loc 1 229 0
 692 0066 ED18     		add	r5, r5, r3
 693              	.LVL56:
 230:../src/game.c ****     if ((new_x==LEFT_BORDER)||(new_x==RIGHT_BORDER)){
 694              		.loc 1 230 0
 695 0068 002D     		cmp	r5, #0
 696 006a E1D1     		bne	.L86
 697              	.L54:
 233:../src/game.c ****     		ball.y=new_y;
 698              		.loc 1 233 0
 699 006c 60C4     		stmia	r4!, {r5, r6}
 231:../src/game.c ****     	if (ball.dx<0){
 700              		.loc 1 231 0
 701 006e 002B     		cmp	r3, #0
 702 0070 47DB     		blt	.L87
 238:../src/game.c ****     		ball_missed(RIGHT_PLAYER);
 703              		.loc 1 238 0
 704 0072 0120     		mov	r0, #1
 705 0074 FFF7FEFF 		bl	ball_missed
 706              	.LVL57:
 707 0078 F2E7     		b	.L49
 708              	.LVL58:
 709              	.L85:
 261:../src/game.c ****     	if ((new_x==31) && ball.dy){
 710              		.loc 1 261 0
 711 007a 1F2D     		cmp	r5, #31
 712 007c 47D0     		beq	.L88
 713              	.L62:
 264:../src/game.c **** 		if ((new_y==BOTTOM_BORDER-1) && (ball.dy==1)){
 714              		.loc 1 264 0
 715 007e 2C2E     		cmp	r6, #44
 716 0080 49D0     		beq	.L89
 266:../src/game.c **** 		}else if ((new_y==TOP_BORDER+1) && (ball.dy==-1)){
 717              		.loc 1 266 0
 718 0082 0D2E     		cmp	r6, #13
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 19


 719 0084 4DD0     		beq	.L90
 720              	.L64:
 721              	.LBB4:
 722              	.LBB5:
 102:../src/game.c ****     tone(100,30);
 723              		.loc 1 102 0
 724 0086 6420     		mov	r0, #100
 725 0088 1E21     		mov	r1, #30
 726 008a FFF7FEFF 		bl	tone
 727              	.LVL59:
 728              	.LBE5:
 729              	.LBE4:
 273:../src/game.c ****     plot(new_x,new_y,INVERT);
 730              		.loc 1 273 0
 731 008e 281C     		mov	r0, r5
 732 0090 311C     		mov	r1, r6
 733 0092 0222     		mov	r2, #2
 272:../src/game.c ****     ball.y=new_y;
 734              		.loc 1 272 0
 735 0094 60C4     		stmia	r4!, {r5, r6}
 273:../src/game.c ****     plot(new_x,new_y,INVERT);
 736              		.loc 1 273 0
 737 0096 FFF7FEFF 		bl	plot
 738              	.LVL60:
 739 009a E1E7     		b	.L49
 740              	.LVL61:
 741              	.L83:
 245:../src/game.c ****     if ((ball.dx<0) && (new_x==LEFT_BORDER+1)){
 742              		.loc 1 245 0 discriminator 1
 743 009c 012D     		cmp	r5, #1
 744 009e D5D1     		bne	.L58
 246:../src/game.c ****     		if ((new_y>=paddle[LEFT_PLAYER])&&(new_y<=(paddle[LEFT_PLAYER]+2))){
 745              		.loc 1 246 0
 746 00a0 2449     		ldr	r1, .L91+4
 747 00a2 0978     		ldrb	r1, [r1]
 748 00a4 8E42     		cmp	r6, r1
 749 00a6 D3DB     		blt	.L59
 246:../src/game.c ****     		if ((new_y>=paddle[LEFT_PLAYER])&&(new_y<=(paddle[LEFT_PLAYER]+2))){
 750              		.loc 1 246 0 is_stmt 0 discriminator 1
 751 00a8 0231     		add	r1, r1, #2
 752 00aa 8E42     		cmp	r6, r1
 753 00ac D0DC     		bgt	.L59
 754              	.LVL62:
 248:../src/game.c ****     			ball.dx=-ball.dx;
 755              		.loc 1 248 0 is_stmt 1
 756 00ae 5B42     		neg	r3, r3
 757 00b0 A360     		str	r3, [r4, #8]
 249:../src/game.c ****     			ball.dy=rand()%3 - 1;
 758              		.loc 1 249 0
 759 00b2 FFF7FEFF 		bl	rand
 760              	.LVL63:
 761 00b6 0321     		mov	r1, #3
 762 00b8 FFF7FEFF 		bl	__aeabi_idivmod
 763              	.LVL64:
 764 00bc 0139     		sub	r1, r1, #1
 765 00be E160     		str	r1, [r4, #12]
 250:../src/game.c ****     			ball.skip=rand()%2;
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 20


 766              		.loc 1 250 0
 767 00c0 FFF7FEFF 		bl	rand
 768              	.LVL65:
 769 00c4 C30F     		lsr	r3, r0, #31
 770 00c6 C018     		add	r0, r0, r3
 771 00c8 2840     		and	r0, r5
 772 00ca C31A     		sub	r3, r0, r3
 773 00cc 2361     		str	r3, [r4, #16]
 774 00ce D6E7     		b	.L62
 775              	.LVL66:
 776              	.L84:
 253:../src/game.c ****     		if ((new_y>=paddle[RIGHT_PLAYER])&&(new_y<=(paddle[RIGHT_PLAYER]+2))){
 777              		.loc 1 253 0
 778 00d0 1849     		ldr	r1, .L91+4
 779 00d2 4978     		ldrb	r1, [r1, #1]
 780 00d4 8E42     		cmp	r6, r1
 781 00d6 BBDB     		blt	.L59
 253:../src/game.c ****     		if ((new_y>=paddle[RIGHT_PLAYER])&&(new_y<=(paddle[RIGHT_PLAYER]+2))){
 782              		.loc 1 253 0 is_stmt 0 discriminator 1
 783 00d8 0231     		add	r1, r1, #2
 784 00da 8E42     		cmp	r6, r1
 785 00dc B8DC     		bgt	.L59
 786              	.LVL67:
 255:../src/game.c ****     			ball.dx=-ball.dx;
 787              		.loc 1 255 0 is_stmt 1
 788 00de 5B42     		neg	r3, r3
 789 00e0 A360     		str	r3, [r4, #8]
 256:../src/game.c ****     			ball.dy=rand()%3 - 1;
 790              		.loc 1 256 0
 791 00e2 FFF7FEFF 		bl	rand
 792              	.LVL68:
 793 00e6 0321     		mov	r1, #3
 794 00e8 FFF7FEFF 		bl	__aeabi_idivmod
 795              	.LVL69:
 796 00ec 0139     		sub	r1, r1, #1
 797 00ee E160     		str	r1, [r4, #12]
 798              	.LVL70:
 799              	.L81:
 262:../src/game.c ****     		ball.skip=rand()%2;
 800              		.loc 1 262 0
 801 00f0 FFF7FEFF 		bl	rand
 802              	.LVL71:
 803 00f4 C30F     		lsr	r3, r0, #31
 804 00f6 C018     		add	r0, r0, r3
 805 00f8 0122     		mov	r2, #1
 806 00fa 1040     		and	r0, r2
 807 00fc C31A     		sub	r3, r0, r3
 808 00fe 2361     		str	r3, [r4, #16]
 809 0100 BDE7     		b	.L62
 810              	.LVL72:
 811              	.L87:
 234:../src/game.c ****     		ball_missed(LEFT_PLAYER);
 812              		.loc 1 234 0
 813 0102 0020     		mov	r0, #0
 814 0104 FFF7FEFF 		bl	ball_missed
 815              	.LVL73:
 816 0108 AAE7     		b	.L49
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 21


 817              	.L67:
 243:../src/game.c ****     	bounce=1; // rebond sur mur latéral.
 818              		.loc 1 243 0
 819 010a 0122     		mov	r2, #1
 820 010c 9CE7     		b	.L57
 821              	.LVL74:
 822              	.L88:
 261:../src/game.c ****     	if ((new_x==31) && ball.dy){
 823              		.loc 1 261 0 discriminator 1
 824 010e E268     		ldr	r2, [r4, #12]
 825 0110 002A     		cmp	r2, #0
 826 0112 B4D0     		beq	.L62
 827 0114 ECE7     		b	.L81
 828              	.L89:
 264:../src/game.c **** 		if ((new_y==BOTTOM_BORDER-1) && (ball.dy==1)){
 829              		.loc 1 264 0 discriminator 1
 830 0116 E368     		ldr	r3, [r4, #12]
 831 0118 012B     		cmp	r3, #1
 832 011a B4D1     		bne	.L64
 265:../src/game.c **** 			ball.dy=-1;
 833              		.loc 1 265 0
 834 011c 5B42     		neg	r3, r3
 835 011e E360     		str	r3, [r4, #12]
 836 0120 B1E7     		b	.L64
 837              	.L90:
 266:../src/game.c **** 		}else if ((new_y==TOP_BORDER+1) && (ball.dy==-1)){
 838              		.loc 1 266 0 discriminator 1
 839 0122 E168     		ldr	r1, [r4, #12]
 840 0124 0131     		add	r1, r1, #1
 841 0126 AED1     		bne	.L64
 267:../src/game.c **** 			ball.dy=1;
 842              		.loc 1 267 0
 843 0128 0123     		mov	r3, #1
 844 012a E360     		str	r3, [r4, #12]
 845 012c ABE7     		b	.L64
 846              	.L92:
 847 012e C046     		.align	2
 848              	.L91:
 849 0130 00000000 		.word	ball
 850 0134 00000000 		.word	paddle
 851              		.cfi_endproc
 852              	.LFE40:
 854              		.section	.text.initialize_pong_game,"ax",%progbits
 855              		.align	2
 856              		.global	initialize_pong_game
 857              		.code	16
 858              		.thumb_func
 860              	initialize_pong_game:
 861              	.LFB41:
 275:../src/game.c **** 
 276:../src/game.c **** void initialize_pong_game(){
 862              		.loc 1 276 0
 863              		.cfi_startproc
 864 0000 70B5     		push	{r4, r5, r6, lr}
 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 4, -16
 867              		.cfi_offset 5, -12
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 22


 868              		.cfi_offset 6, -8
 869              		.cfi_offset 14, -4
 277:../src/game.c **** 	unsigned i;
 278:../src/game.c **** 	clear_screen();
 870              		.loc 1 278 0
 871 0002 FFF7FEFF 		bl	clear_screen
 872              	.LVL75:
 873 0006 2C48     		ldr	r0, .L105
 874 0008 6023     		mov	r3, #96
 279:../src/game.c **** 	for (i=0;i<ROW_SIZE;i++){
 280:../src/game.c **** 		 video_buffer[i+TOP_BORDER*ROW_SIZE]=0xff;
 875              		.loc 1 280 0
 876 000a FF22     		mov	r2, #255
 877              	.LVL76:
 878              	.L95:
 281:../src/game.c **** 		 video_buffer[i+ROW_SIZE*BOTTOM_BORDER]=0xff;
 879              		.loc 1 281 0 discriminator 2
 880 000c 8424     		mov	r4, #132
 881 000e 6400     		lsl	r4, r4, #1
 280:../src/game.c **** 		 video_buffer[i+TOP_BORDER*ROW_SIZE]=0xff;
 882              		.loc 1 280 0 discriminator 2
 883 0010 C254     		strb	r2, [r0, r3]
 884              		.loc 1 281 0 discriminator 2
 885 0012 1919     		add	r1, r3, r4
 886 0014 0133     		add	r3, r3, #1
 887              	.LVL77:
 888 0016 4254     		strb	r2, [r0, r1]
 889              	.LVL78:
 279:../src/game.c **** 	for (i=0;i<ROW_SIZE;i++){
 890              		.loc 1 279 0 discriminator 2
 891 0018 682B     		cmp	r3, #104
 892 001a F7D1     		bne	.L95
 279:../src/game.c **** 	for (i=0;i<ROW_SIZE;i++){
 893              		.loc 1 279 0 is_stmt 0
 894 001c 6B22     		mov	r2, #107
 895 001e 0D23     		mov	r3, #13
 282:../src/game.c **** 	}
 283:../src/game.c **** 	for (i=TOP_BORDER+1;i<(BOTTOM_BORDER-1);i++){
 284:../src/game.c **** 		 if (i&1) video_buffer[ROW_SIZE*i+3]=1u;
 896              		.loc 1 284 0 is_stmt 1
 897 0020 0121     		mov	r1, #1
 898              	.L98:
 899              	.LVL79:
 900 0022 1942     		tst	r1, r3
 901 0024 00D0     		beq	.L96
 902              		.loc 1 284 0 is_stmt 0 discriminator 1
 903 0026 8154     		strb	r1, [r0, r2]
 904              	.L96:
 283:../src/game.c **** 	for (i=TOP_BORDER+1;i<(BOTTOM_BORDER-1);i++){
 905              		.loc 1 283 0 is_stmt 1
 906 0028 0133     		add	r3, r3, #1
 907              	.LVL80:
 908 002a 0832     		add	r2, r2, #8
 909 002c 2C2B     		cmp	r3, #44
 910 002e F8D1     		bne	.L98
 285:../src/game.c **** 	}
 286:../src/game.c **** 	running=0;
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 23


 911              		.loc 1 286 0
 912 0030 224A     		ldr	r2, .L105+4
 287:../src/game.c **** 	score[LEFT_PLAYER]=0;
 913              		.loc 1 287 0
 914 0032 234D     		ldr	r5, .L105+8
 286:../src/game.c **** 	running=0;
 915              		.loc 1 286 0
 916 0034 0023     		mov	r3, #0
 917              	.LVL81:
 918 0036 1370     		strb	r3, [r2]
 919              		.loc 1 287 0
 920 0038 2B70     		strb	r3, [r5]
 288:../src/game.c **** 	score[RIGHT_PLAYER]=0;
 921              		.loc 1 288 0
 922 003a 6B70     		strb	r3, [r5, #1]
 289:../src/game.c **** 	server=winner;
 923              		.loc 1 289 0
 924 003c 214B     		ldr	r3, .L105+12
 925 003e 224C     		ldr	r4, .L105+16
 926 0040 1A78     		ldrb	r2, [r3]
 290:../src/game.c **** 	winner=NO_WINNER;
 291:../src/game.c **** 	paddle[LEFT_PLAYER]=read_pot(LEFT_PLAYER)+TOP_BORDER;
 927              		.loc 1 291 0
 928 0042 0020     		mov	r0, #0
 289:../src/game.c **** 	server=winner;
 929              		.loc 1 289 0
 930 0044 2270     		strb	r2, [r4]
 290:../src/game.c **** 	winner=NO_WINNER;
 931              		.loc 1 290 0
 932 0046 0322     		mov	r2, #3
 933 0048 1A70     		strb	r2, [r3]
 934              		.loc 1 291 0
 935 004a FFF7FEFF 		bl	read_pot
 936              	.LVL82:
 937 004e 1F4E     		ldr	r6, .L105+20
 938 0050 0C30     		add	r0, r0, #12
 939 0052 3070     		strb	r0, [r6]
 292:../src/game.c **** 	paddle[RIGHT_PLAYER]=read_pot(RIGHT_PLAYER)+TOP_BORDER;
 940              		.loc 1 292 0
 941 0054 0120     		mov	r0, #1
 942 0056 FFF7FEFF 		bl	read_pot
 943              	.LVL83:
 944 005a 031C     		mov	r3, r0
 945 005c 0C33     		add	r3, r3, #12
 293:../src/game.c **** 	if (server==LEFT_PLAYER){
 946              		.loc 1 293 0
 947 005e 2278     		ldrb	r2, [r4]
 292:../src/game.c **** 	paddle[RIGHT_PLAYER]=read_pot(RIGHT_PLAYER)+TOP_BORDER;
 948              		.loc 1 292 0
 949 0060 DBB2     		uxtb	r3, r3
 950 0062 7370     		strb	r3, [r6, #1]
 294:../src/game.c **** 		ball.x=LEFT_BORDER+1;
 951              		.loc 1 294 0
 952 0064 1A4C     		ldr	r4, .L105+24
 293:../src/game.c **** 	if (server==LEFT_PLAYER){
 953              		.loc 1 293 0
 954 0066 002A     		cmp	r2, #0
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 24


 955 0068 1FD0     		beq	.L104
 295:../src/game.c **** 		ball.y=paddle[LEFT_PLAYER]+1;
 296:../src/game.c **** 	}else{
 297:../src/game.c **** 		ball.x=RIGHT_BORDER-1;
 956              		.loc 1 297 0
 957 006a 3E22     		mov	r2, #62
 298:../src/game.c **** 		ball.y=paddle[RIGHT_PLAYER]+1;
 958              		.loc 1 298 0
 959 006c 0133     		add	r3, r3, #1
 297:../src/game.c **** 		ball.x=RIGHT_BORDER-1;
 960              		.loc 1 297 0
 961 006e 2260     		str	r2, [r4]
 962              		.loc 1 298 0
 963 0070 6360     		str	r3, [r4, #4]
 964              	.L100:
 299:../src/game.c **** 	}
 300:../src/game.c **** 	ball.dx=0;
 965              		.loc 1 300 0
 966 0072 0023     		mov	r3, #0
 301:../src/game.c **** 	ball.dy=0;
 302:../src/game.c **** 	write_score(LEFT_PLAYER,score[LEFT_PLAYER]);
 967              		.loc 1 302 0
 968 0074 2978     		ldrb	r1, [r5]
 969 0076 0020     		mov	r0, #0
 300:../src/game.c **** 	ball.dx=0;
 970              		.loc 1 300 0
 971 0078 A360     		str	r3, [r4, #8]
 301:../src/game.c **** 	ball.dy=0;
 972              		.loc 1 301 0
 973 007a E360     		str	r3, [r4, #12]
 974              		.loc 1 302 0
 975 007c FFF7FEFF 		bl	write_score
 976              	.LVL84:
 303:../src/game.c **** 	write_score(RIGHT_PLAYER,score[RIGHT_PLAYER]);
 977              		.loc 1 303 0
 978 0080 6978     		ldrb	r1, [r5, #1]
 979 0082 0120     		mov	r0, #1
 980 0084 FFF7FEFF 		bl	write_score
 981              	.LVL85:
 304:../src/game.c **** 	draw_paddle(LEFT_PLAYER,WHITE);
 982              		.loc 1 304 0
 983 0088 0020     		mov	r0, #0
 984 008a 0121     		mov	r1, #1
 985 008c FFF7FEFF 		bl	draw_paddle
 986              	.LVL86:
 305:../src/game.c **** 	draw_paddle(RIGHT_PLAYER,WHITE);
 987              		.loc 1 305 0
 988 0090 0120     		mov	r0, #1
 989 0092 0121     		mov	r1, #1
 990 0094 FFF7FEFF 		bl	draw_paddle
 991              	.LVL87:
 306:../src/game.c **** 	plot(ball.x,ball.y,WHITE);
 992              		.loc 1 306 0
 993 0098 03CC     		ldmia	r4!, {r0, r1}
 994 009a 0122     		mov	r2, #1
 995 009c FFF7FEFF 		bl	plot
 996              	.LVL88:
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 25


 307:../src/game.c **** 	srand(frame_cntr);
 997              		.loc 1 307 0
 998 00a0 0C4B     		ldr	r3, .L105+28
 308:../src/game.c **** }//f()
 999              		.loc 1 308 0
 1000              		@ sp needed
 307:../src/game.c **** 	srand(frame_cntr);
 1001              		.loc 1 307 0
 1002 00a2 1868     		ldr	r0, [r3]
 1003 00a4 FFF7FEFF 		bl	srand
 1004              	.LVL89:
 1005              		.loc 1 308 0
 1006 00a8 70BD     		pop	{r4, r5, r6, pc}
 1007              	.L104:
 294:../src/game.c **** 		ball.x=LEFT_BORDER+1;
 1008              		.loc 1 294 0
 1009 00aa 0123     		mov	r3, #1
 1010 00ac 2360     		str	r3, [r4]
 295:../src/game.c **** 		ball.y=paddle[LEFT_PLAYER]+1;
 1011              		.loc 1 295 0
 1012 00ae 3378     		ldrb	r3, [r6]
 1013 00b0 0133     		add	r3, r3, #1
 1014 00b2 6360     		str	r3, [r4, #4]
 1015 00b4 DDE7     		b	.L100
 1016              	.L106:
 1017 00b6 C046     		.align	2
 1018              	.L105:
 1019 00b8 00000000 		.word	video_buffer
 1020 00bc 00000000 		.word	running
 1021 00c0 00000000 		.word	score
 1022 00c4 00000000 		.word	.LANCHOR0
 1023 00c8 00000000 		.word	server
 1024 00cc 00000000 		.word	paddle
 1025 00d0 00000000 		.word	ball
 1026 00d4 00000000 		.word	frame_cntr
 1027              		.cfi_endproc
 1028              	.LFE41:
 1030              		.section	.text.play_pong,"ax",%progbits
 1031              		.align	2
 1032              		.global	play_pong
 1033              		.code	16
 1034              		.thumb_func
 1036              	play_pong:
 1037              	.LFB42:
 309:../src/game.c **** 
 310:../src/game.c **** // au départ c'est le joueur de gauche qui a le service
 311:../src/game.c **** // il doit déplacer sa raquette pour lancer la balle.
 312:../src/game.c **** // la balle part avec un angle pointant vers le haut
 313:../src/game.c **** // ou le bas en fonction de la direction du
 314:../src/game.c **** // déplacement de la raquette.
 315:../src/game.c **** void play_pong(){
 1038              		.loc 1 315 0
 1039              		.cfi_startproc
 1040 0000 10B5     		push	{r4, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 4, -8
 1043              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 26


 316:../src/game.c **** 	wait_service();
 1044              		.loc 1 316 0
 1045 0002 FFF7FEFF 		bl	wait_service
 1046              	.LVL90:
 317:../src/game.c **** 	running=1;
 1047              		.loc 1 317 0
 1048 0006 0A4C     		ldr	r4, .L110
 1049 0008 0123     		mov	r3, #1
 1050 000a 2370     		strb	r3, [r4]
 1051              	.L109:
 318:../src/game.c **** 	while (running){
 319:../src/game.c **** 		move_paddle(LEFT_PLAYER);
 1052              		.loc 1 319 0
 1053 000c 0020     		mov	r0, #0
 1054 000e FFF7FEFF 		bl	move_paddle
 1055              	.LVL91:
 320:../src/game.c **** 		move_paddle(RIGHT_PLAYER);
 1056              		.loc 1 320 0
 1057 0012 0120     		mov	r0, #1
 1058 0014 FFF7FEFF 		bl	move_paddle
 1059              	.LVL92:
 321:../src/game.c **** 		move_ball();
 1060              		.loc 1 321 0
 1061 0018 FFF7FEFF 		bl	move_ball
 1062              	.LVL93:
 322:../src/game.c **** 		frame_sync();
 1063              		.loc 1 322 0
 1064 001c FFF7FEFF 		bl	frame_sync
 1065              	.LVL94:
 323:../src/game.c **** 		frame_delay(1);
 1066              		.loc 1 323 0
 1067 0020 0120     		mov	r0, #1
 1068 0022 FFF7FEFF 		bl	frame_delay
 1069              	.LVL95:
 318:../src/game.c **** 	while (running){
 1070              		.loc 1 318 0
 1071 0026 2378     		ldrb	r3, [r4]
 1072 0028 002B     		cmp	r3, #0
 1073 002a EFD1     		bne	.L109
 324:../src/game.c **** 	}
 325:../src/game.c **** }//f()
 1074              		.loc 1 325 0
 1075              		@ sp needed
 1076 002c 10BD     		pop	{r4, pc}
 1077              	.L111:
 1078 002e C046     		.align	2
 1079              	.L110:
 1080 0030 00000000 		.word	running
 1081              		.cfi_endproc
 1082              	.LFE42:
 1084              		.global	gonna_fly_now
 1085              		.global	WINNER
 1086              		.comm	running,1,1
 1087              		.comm	server,1,1
 1088              		.global	winner
 1089              		.comm	ball,20,4
 1090              		.comm	paddle,2,4
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 27


 1091              		.comm	score,2,4
 1092              		.section	.rodata.WINNER,"a",%progbits
 1093              		.align	2
 1094              		.set	.LANCHOR1,. + 0
 1097              	WINNER:
 1098 0000 80       		.byte	-128
 1099 0001 1F       		.byte	31
 1100 0002 00       		.byte	0
 1101 0003 20       		.byte	32
 1102 0004 80       		.byte	-128
 1103 0005 20       		.byte	32
 1104 0006 80       		.byte	-128
 1105 0007 20       		.byte	32
 1106 0008 40       		.byte	64
 1107 0009 2A       		.byte	42
 1108 000a 80       		.byte	-128
 1109 000b 40       		.byte	64
 1110 000c 40       		.byte	64
 1111 000d 20       		.byte	32
 1112 000e 80       		.byte	-128
 1113 000f 40       		.byte	64
 1114 0010 60       		.byte	96
 1115 0011 31       		.byte	49
 1116 0012 80       		.byte	-128
 1117 0013 C0       		.byte	-64
 1118 0014 20       		.byte	32
 1119 0015 1B       		.byte	27
 1120 0016 00       		.byte	0
 1121 0017 80       		.byte	-128
 1122 0018 30       		.byte	48
 1123 0019 0E       		.byte	14
 1124 001a 01       		.byte	1
 1125 001b 80       		.byte	-128
 1126 001c 18       		.byte	24
 1127 001d 0A       		.byte	10
 1128 001e 03       		.byte	3
 1129 001f 00       		.byte	0
 1130 0020 0F       		.byte	15
 1131 0021 FB       		.byte	-5
 1132 0022 FE       		.byte	-2
 1133 0023 00       		.byte	0
 1134 0024 00       		.byte	0
 1135 0025 40       		.byte	64
 1136 0026 40       		.byte	64
 1137 0027 00       		.byte	0
 1138 0028 00       		.byte	0
 1139 0029 51       		.byte	81
 1140 002a 40       		.byte	64
 1141 002b 00       		.byte	0
 1142 002c 00       		.byte	0
 1143 002d 55       		.byte	85
 1144 002e 40       		.byte	64
 1145 002f 00       		.byte	0
 1146 0030 00       		.byte	0
 1147 0031 55       		.byte	85
 1148 0032 40       		.byte	64
 1149 0033 00       		.byte	0
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 28


 1150 0034 00       		.byte	0
 1151 0035 55       		.byte	85
 1152 0036 40       		.byte	64
 1153 0037 00       		.byte	0
 1154 0038 00       		.byte	0
 1155 0039 5B       		.byte	91
 1156 003a 40       		.byte	64
 1157 003b 00       		.byte	0
 1158 003c 00       		.byte	0
 1159 003d 40       		.byte	64
 1160 003e 40       		.byte	64
 1161 003f 00       		.byte	0
 1162 0040 00       		.byte	0
 1163 0041 40       		.byte	64
 1164 0042 40       		.byte	64
 1165 0043 00       		.byte	0
 1166 0044 00       		.byte	0
 1167 0045 40       		.byte	64
 1168 0046 40       		.byte	64
 1169 0047 00       		.byte	0
 1170 0048 00       		.byte	0
 1171 0049 60       		.byte	96
 1172 004a C0       		.byte	-64
 1173 004b 00       		.byte	0
 1174 004c 00       		.byte	0
 1175 004d 3F       		.byte	63
 1176 004e 80       		.byte	-128
 1177 004f 00       		.byte	0
 1178 0050 00       		.byte	0
 1179 0051 3B       		.byte	59
 1180 0052 80       		.byte	-128
 1181 0053 00       		.byte	0
 1182 0054 00       		.byte	0
 1183 0055 31       		.byte	49
 1184 0056 80       		.byte	-128
 1185 0057 00       		.byte	0
 1186 0058 00       		.byte	0
 1187 0059 71       		.byte	113
 1188 005a C0       		.byte	-64
 1189 005b 00       		.byte	0
 1190 005c 00       		.byte	0
 1191 005d 60       		.byte	96
 1192 005e C0       		.byte	-64
 1193 005f 00       		.byte	0
 1194 0060 00       		.byte	0
 1195 0061 60       		.byte	96
 1196 0062 C0       		.byte	-64
 1197 0063 00       		.byte	0
 1198 0064 00       		.byte	0
 1199 0065 60       		.byte	96
 1200 0066 C0       		.byte	-64
 1201 0067 00       		.byte	0
 1202 0068 00       		.byte	0
 1203 0069 60       		.byte	96
 1204 006a C0       		.byte	-64
 1205 006b 00       		.byte	0
 1206 006c 00       		.byte	0
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 29


 1207 006d C0       		.byte	-64
 1208 006e 60       		.byte	96
 1209 006f 00       		.byte	0
 1210 0070 00       		.byte	0
 1211 0071 C0       		.byte	-64
 1212 0072 60       		.byte	96
 1213 0073 00       		.byte	0
 1214 0074 00       		.byte	0
 1215 0075 C0       		.byte	-64
 1216 0076 60       		.byte	96
 1217 0077 00       		.byte	0
 1218 0078 01       		.byte	1
 1219 0079 80       		.byte	-128
 1220 007a 30       		.byte	48
 1221 007b 00       		.byte	0
 1222 007c 03       		.byte	3
 1223 007d 80       		.byte	-128
 1224 007e 38       		.byte	56
 1225 007f 00       		.byte	0
 1226              		.section	.rodata.gonna_fly_now,"a",%progbits
 1227              		.align	2
 1228              		.set	.LANCHOR2,. + 0
 1231              	gonna_fly_now:
 1232 0000 88010000 		.word	392
 1233 0004 FA000000 		.word	250
 1234 0008 88010000 		.word	392
 1235 000c 7D000000 		.word	125
 1236 0010 88010000 		.word	392
 1237 0014 7D000000 		.word	125
 1238 0018 88010000 		.word	392
 1239 001c FA000000 		.word	250
 1240 0020 88010000 		.word	392
 1241 0024 FA000000 		.word	250
 1242 0028 88010000 		.word	392
 1243 002c 7D000000 		.word	125
 1244 0030 88010000 		.word	392
 1245 0034 7D000000 		.word	125
 1246 0038 EE010000 		.word	494
 1247 003c FA000000 		.word	250
 1248 0040 88010000 		.word	392
 1249 0044 7D000000 		.word	125
 1250 0048 88010000 		.word	392
 1251 004c 7D000000 		.word	125
 1252 0050 88010000 		.word	392
 1253 0054 FA000000 		.word	250
 1254 0058 EE010000 		.word	494
 1255 005c FA000000 		.word	250
 1256 0060 EE010000 		.word	494
 1257 0064 FA000000 		.word	250
 1258 0068 EE010000 		.word	494
 1259 006c 7D000000 		.word	125
 1260 0070 EE010000 		.word	494
 1261 0074 7D000000 		.word	125
 1262 0078 EE010000 		.word	494
 1263 007c FA000000 		.word	250
 1264 0080 EE010000 		.word	494
 1265 0084 7D000000 		.word	125
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 30


 1266 0088 EE010000 		.word	494
 1267 008c 7D000000 		.word	125
 1268 0090 4B020000 		.word	587
 1269 0094 FA000000 		.word	250
 1270 0098 EE010000 		.word	494
 1271 009c 7D000000 		.word	125
 1272 00a0 EE010000 		.word	494
 1273 00a4 7D000000 		.word	125
 1274 00a8 EE010000 		.word	494
 1275 00ac F4010000 		.word	500
 1276 00b0 00000000 		.word	0
 1277 00b4 00000000 		.word	0
 1278              		.section	.bss.winner,"aw",%nobits
 1279              		.set	.LANCHOR0,. + 0
 1282              	winner:
 1283 0000 00       		.space	1
 1284              		.text
 1285              	.Letext0:
 1286              		.file 2 "c:\\nxp\\lpcxpresso_7.0.2_102\\lpcxpresso\\tools\\redlib\\include\\stdint.h"
 1287              		.file 3 "../src/tvout.h"
 1288              		.file 4 "../src/hardware.h"
 1289              		.file 5 "../src/display.h"
 1290              		.file 6 "c:\\nxp\\lpcxpresso_7.0.2_102\\lpcxpresso\\tools\\redlib\\include\\stdlib.h"
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 game.c
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:18     .text.draw_paddle:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:23     .text.draw_paddle:00000000 draw_paddle
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:117    .text.draw_paddle:00000064 $d
                            *COM*:00000002 paddle
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:123    .text.move_paddle:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:128    .text.move_paddle:00000000 move_paddle
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:177    .text.move_paddle:00000028 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:182    .text.sound_miss:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:187    .text.sound_miss:00000000 sound_miss
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:228    .text.sound_rebound:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:233    .text.sound_rebound:00000000 sound_rebound
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:253    .text.game_over:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:258    .text.game_over:00000000 game_over
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:335    .text.game_over:00000050 $d
                            *COM*:00000002 score
                            *COM*:00000001 running
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:346    .text.wait_service:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:351    .text.wait_service:00000000 wait_service
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:440    .text.wait_service:00000068 $d
                            *COM*:00000001 server
                            *COM*:00000014 ball
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:447    .text.ball_missed:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:452    .text.ball_missed:00000000 ball_missed
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:581    .text.ball_missed:00000090 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:589    .text.move_ball:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:594    .text.move_ball:00000000 move_ball
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:849    .text.move_ball:00000130 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:855    .text.initialize_pong_game:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:860    .text.initialize_pong_game:00000000 initialize_pong_game
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1019   .text.initialize_pong_game:000000b8 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1031   .text.play_pong:00000000 $t
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1036   .text.play_pong:00000000 play_pong
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1080   .text.play_pong:00000030 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1231   .rodata.gonna_fly_now:00000000 gonna_fly_now
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1097   .rodata.WINNER:00000000 WINNER
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1282   .bss.winner:00000000 winner
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1093   .rodata.WINNER:00000000 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1227   .rodata.gonna_fly_now:00000000 $d
C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s:1283   .bss.winner:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
video_buffer
read_pot
tone
play_tune
__aeabi_idivmod
rand
plot
write_score
clear_screen
srand
frame_cntr
frame_sync
frame_delay
ARM GAS  C:\Users\Jacques\AppData\Local\Temp\ccBrWxHa.s 			page 32


